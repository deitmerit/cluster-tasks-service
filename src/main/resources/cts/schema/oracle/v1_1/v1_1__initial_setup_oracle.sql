DECLARE
  tablesFound NUMBER;

BEGIN
  --
  -- METADATA
  --
  SELECT COUNT(TABLE_NAME)
  INTO tablesFound
  FROM user_tables
  WHERE TABLE_NAME = 'CLUSTER_TASK_META';
  IF tablesFound = 0
  THEN
    EXECUTE IMMEDIATE 'CREATE TABLE CLUSTER_TASK_META (
      CTSKM_ID               NUMBER(19, 0)     NOT NULL ENABLE,
      CTSKM_TASK_TYPE        NUMBER(19, 0)     NOT NULL ENABLE,
      CTSKM_SHARED_SPACE_ID  NUMBER(19, 0),
      CTSKM_WORKSPACE_ID     NUMBER(19, 0),
      CTSKM_PROCESSOR_TYPE   VARCHAR2(40 CHAR) NOT NULL ENABLE,
      CTSKM_UNIQUENESS_KEY   VARCHAR2(40 CHAR) NOT NULL ENABLE,
      CTSKM_CONCURRENCY_KEY  VARCHAR2(40 CHAR),
      CTSKM_ORDERING_FACTOR  NUMBER(19, 0),
      CTSKM_CREATED          DATE              NOT NULL ENABLE,
      CTSKM_DELAY_BY_MILLIS  NUMBER(19, 0)     NOT NULL ENABLE,
      CTSKM_STARTED          DATE,
      CTSKM_RUNTIME_INSTANCE VARCHAR2(40 CHAR),
      CTSKM_MAX_TIME_TO_RUN  NUMBER(19, 0)     NOT NULL ENABLE,
      CTSKM_BODY_PARTITION   NUMBER(19, 0),
      CTSKM_STATUS           NUMBER(19, 0)     NOT NULL ENABLE,
      CONSTRAINT CTSKM_PK PRIMARY KEY (CTSKM_ID)
        USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    )
    PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
    NOCOMPRESS LOGGING';

    EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX CTSKM_IDX_0
      ON CLUSTER_TASK_META (CTSKM_PROCESSOR_TYPE, CTSKM_UNIQUENESS_KEY)
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS';

    EXECUTE IMMEDIATE 'CREATE INDEX CTSKM_IDX_1
      ON CLUSTER_TASK_META (CTSKM_STATUS, CTSKM_STARTED)
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS';

    EXECUTE IMMEDIATE 'CREATE INDEX CTSKM_IDX_2
      ON CLUSTER_TASK_META (CTSKM_CREATED)
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS';
  END IF;

  --
  -- TASKS' BODY - PARTITION 0
  --
  SELECT COUNT(TABLE_NAME)
  INTO tablesFound
  FROM user_tables
  WHERE TABLE_NAME = 'CLUSTER_TASK_BODY_P0';
  IF tablesFound = 0
  THEN
    EXECUTE IMMEDIATE 'CREATE TABLE CLUSTER_TASK_BODY_P0 (
      CTSKB_ID   NUMBER(19, 0) NOT NULL ENABLE,
      CTSKB_BODY CLOB          NOT NULL ENABLE,
      CONSTRAINT CTSKB_PK_P0 PRIMARY KEY (CTSKB_ID)
        USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    )
    PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
    NOCOMPRESS LOGGING
    LOB (CTSKB_BODY) STORE AS SECUREFILE (
    CHUNK 8192
    NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
    )';
  END IF;

  --
  -- TASKS' BODY - PARTITION 1
  --
  SELECT COUNT(TABLE_NAME)
  INTO tablesFound
  FROM user_tables
  WHERE TABLE_NAME = 'CLUSTER_TASK_BODY_P1';
  IF tablesFound = 0
  THEN
    EXECUTE IMMEDIATE 'CREATE TABLE CLUSTER_TASK_BODY_P1 (
      CTSKB_ID   NUMBER(19, 0) NOT NULL ENABLE,
      CTSKB_BODY CLOB          NOT NULL ENABLE,
      CONSTRAINT CTSKB_PK_P1 PRIMARY KEY (CTSKB_ID)
        USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    )
    PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
    NOCOMPRESS LOGGING
    LOB (CTSKB_BODY) STORE AS SECUREFILE (
    CHUNK 8192
    NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
    )';
  END IF;

  --
  -- TASKS' BODY - PARTITION 2
  --
  SELECT COUNT(TABLE_NAME)
  INTO tablesFound
  FROM user_tables
  WHERE TABLE_NAME = 'CLUSTER_TASK_BODY_P2';
  IF tablesFound = 0
  THEN
    EXECUTE IMMEDIATE 'CREATE TABLE CLUSTER_TASK_BODY_P2 (
      CTSKB_ID   NUMBER(19, 0) NOT NULL ENABLE,
      CTSKB_BODY CLOB          NOT NULL ENABLE,
      CONSTRAINT CTSKB_PK_P2 PRIMARY KEY (CTSKB_ID)
        USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    )
    PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
    NOCOMPRESS LOGGING
    LOB (CTSKB_BODY) STORE AS SECUREFILE (
    CHUNK 8192
    NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
    )';
  END IF;

  --
  -- TASKS' BODY - PARTITION 3
  --
  SELECT COUNT(TABLE_NAME)
  INTO tablesFound
  FROM user_tables
  WHERE TABLE_NAME = 'CLUSTER_TASK_BODY_P3';
  IF tablesFound = 0
  THEN
    EXECUTE IMMEDIATE 'CREATE TABLE CLUSTER_TASK_BODY_P3 (
      CTSKB_ID   NUMBER(19, 0) NOT NULL ENABLE,
      CTSKB_BODY CLOB          NOT NULL ENABLE,
      CONSTRAINT CTSKB_PK_P3 PRIMARY KEY (CTSKB_ID)
        USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    )
    PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
    NOCOMPRESS LOGGING
    LOB (CTSKB_BODY) STORE AS SECUREFILE (
    CHUNK 8192
    NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
    )';
  END IF;

END;